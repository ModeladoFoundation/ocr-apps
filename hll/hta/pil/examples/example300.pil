// example 300. An example for task parallel PIL

int targets[10];
int _pil_task_names[10];
//int targets;
int rank;
int target;
int _pil_num_targets;
gpp_t index_array;
gpp_t data_array;

void f1(int *targets, gpp_t index_array, gpp_t data_array, int *_pil_num_targets, int *_pil_task_names)
{
	printf("f1\n"); fflush(stdout);
	//*targets = 2;
	*_pil_num_targets = 2;
	targets[0] = 2;
	targets[1] = 3;
	_pil_task_names[0] = 0;
	_pil_task_names[1] = 1;
}

void f2(int *target, gpp_t index_array, gpp_t data_array)
{
	sleep(1);
	printf("f2\n"); fflush(stdout);
	*target = 4;
}

void f3(int *target, gpp_t index_array, gpp_t data_array)
{
	printf("f3\n"); fflush(stdout);
	*target = 4;
}

void f4(int *target, gpp_t index_array, gpp_t data_array)
{
	printf("f4\n"); fflush(stdout);
	*target = 0;
}

node(1, rank, NULL, [1:1:1], targets, [0], [(2,3)], f1(targets, index_array, data_array, &_pil_num_targets, _pil_task_names))
node(2, rank, NULL, [1:1:1], target, [1], [4], f2(&target, index_array, data_array))
node(3, rank, NULL, [1:1:1], target, [1], [4], f3(&target, index_array, data_array))
node(4, rank, NULL, [1:1:1], target, [(2,3)], [0], f4(&target, index_array, data_array))
