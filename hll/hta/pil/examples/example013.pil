int rank;
int target;
gpp_t index_array;
gpp_t data_array;
gpp_t gpp;

void f(int *target, gpp_t index_array, gpp_t data_array, gpp_t *gppp)
{
	pil_alloc(gppp, sizeof(int));
	*((int*)gppp->ptr) = 42;
	*target = 2;
}

void g(int *target, gpp_t index_array, gpp_t data_array, gpp_t *gppp)
{
	printf("the secret pil_alloc'd number is %d\n", *((int*)gppp->ptr));
	pil_free(*gppp);
	*target = 0;
}

node(1, rank, NULL, [1:1:1], target, [0], [2], f(&target, index_array, data_array, &gpp))
node(2, rank, NULL, [1:1:1], target, [1], [0], g(&target, index_array, data_array, &gpp))

void pil_main(int argc, char **argv, int rank)
{
	gpp_t gpp;
	gpp_t index_array, data_array;
	pil_init(&index_array, &data_array);
	pil_enter(1, rank, 3, index_array, data_array, &gpp);
}
