// Example 30: an infinited loop to test memory leaks



// global data
int rank;
int target;
gpp_t index_array;
gpp_t data_array;
int i;
int iter;

// setup function
void f(int *target, gpp_t index_array, gpp_t data_array, int *iter)
{
	*iter = 0;
	*target =2;
}


// infinite loop 2 -> 3 -> 2
void g(int *target, gpp_t index_array, gpp_t data_array, int *iter)
{
	if (*iter % 10000 == 0) {
		printf("iteration %d\n", *iter);
	}
	*iter += 1;
	*target = 3;
}

void h(int *target, gpp_t index_array, gpp_t data_array)
{
	*target =2;
}

# node program
node(1, rank, i, [1:1:1], target, [0], [2], f(&target, index_array, data_array, &iter))
node(2, rank, i, [1:1:1], target, [1,3], [3], g(&target, index_array, data_array, &iter))
node(3, rank, i, [1:1:1], target, [2], [2], h(&target, index_array, data_array))
