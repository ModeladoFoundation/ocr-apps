#!/bin/bash -l
#SBATCH -p regular
#SBATCH -N 64
#SBATCH -t 00:010:00
#SBATCH -J z_ptest_daveReduction
#SBATCH -o zz_z_log%j
#SBATCH -L SCRATCH

#This is for the case
    #Edison machines have 24 processes --> so probably 2*12 using Intel HyperThreads
    #   a*b*c+1 = 12
    #       a*b*c <= 11
    #   choices for a*b*c   ratio
    #   11  11 * 1 * 1      11
    #   10  5 *2 * 1        5
    #    9  3 * 3 * 1       3
    #    8  2 * 2 * 2       1 <<-- Let's fly with this
    #
    #   So we need 8 processes per machines, i.e. 8 ranks.

export MACHINE_COUNT=${SLURM_JOB_NUM_NODES}
export COUNT_FOR_FORKJOIN="$(( 8 * $MACHINE_COUNT ))"
export RECURB_ITER_COUNT=1000
export APP_CFLAGS="-DCOUNT_FOR_FORKJOIN=$COUNT_FOR_FORKJOIN -DRECURB_ITER_COUNT=$RECURB_ITER_COUNT"

echo "BeginTime= `date`."
echo "MACHINE_COUNT=$MACHINE_COUNT"
echo "APP_CFLAGS=$APP_CFLAGS"

unset REDUCTION_IMPL
#export REDUCTION_IMPL="EAGER"
echo "REDUCTION_IMPL=$REDUCTION_IMPL"

module load python

# Setup for intel MPI
module load impi/5.1.1.109
export MPI_ROOT=/opt/intel/parallel_studio_xe_2016.0.047/compilers_and_libraries_2016/linux/mpi/intel64
export PATH=${MPI_ROOT}/bin:$PATH
export LD_LIBRARY_PATH=${MPI_ROOT}/lib:$LD_LIBRARY_PATH

# Setup OCR
export OCR_TYPE=x86-mpi
export CONFIG_NUM_THREADS=9   # ThreadCount + 1 for OCR
export OCR_NUM_NODES=${SLURM_JOB_NUM_NODES} # matches the -N parameter
export CC=mpiicc
export NO_DEBUG=yes
export OCRRUN_OPT_ENVKIND=SLURM

# Make & Run
cd $SLURM_SUBMIT_DIR
export RUN_TOOL=/usr/bin/time
export RUN_MODE=buildApp

#cd ocr
#make uninstall clean
#make install
#cd ..
make uninstall clean
make -f Makefile.x86-mpi run

echo "EndTime= `date`."
