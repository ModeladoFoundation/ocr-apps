#!/bin/bash

function print_usage {
    cat << EOF
Usage: cncc_t [options] <cnc_input> ...
where [options] includes:
	-h -help --help		print this message
	-d			dump parsed tokens
	-k			dump keywords
	-p			print the AST
	-dir			directory for placing generated files
	-full-auto		fully automate Main.hc and step stubs for CDSC applications
EOF
    exit 1
}

CNC_INPUT=
CNC_PARSER=CnCParser.Main
CLASSPATH=
args=""

if command -v java &>/dev/null; then
    JAVA=`command -v java`
elif [ -n "$JAVA_HOME" -a -e "$JAVA_HOME/bin/java" ]; then
    JAVA="$JAVA_HOME/bin/java"
elif [ -n "$JRE_HOME" -a -e "$JRE_HOME/bin/java" ]; then
    JAVA="$JRE_HOME/bin/java"
else
    echo "Cannot find java executable"
    exit 1
fi

if [ -z "${CNCOCR_INSTALL}" ]; then
	echo ""
	echo "ERROR CNCOCR_INSTALL environment variable must be defined and point to a CnC Distribution"
	echo ""
    exit 1
fi

parse=true
while [ -n "$1" ]; do
    if [ -z "$parse" ]; then
	args=$args $1
        shift
     P   continue
    fi
    case "$1" in
        -h|-help|--help) print_usage; break;;
        --) parse=;;
        *) args="$args $1";;
    esac
    shift
done

if [ -z "$args" ]; then
	print_usage;
fi

###############################################################################
# This check ensures only .cnc files will be submit to soot.
###############################################################################

cnc_src_pattern=*.cnc

case $args in
  $cnc_src_pattern) echo "" ;;
  *) echo "ERROR: Source file $args must have a .cnc extension to be compiled"; exit 1;;
esac

###############################################################################
# set classpath to CnCParser
###############################################################################

for file in `ls ${CNCOCR_INSTALL}/lib`; do
	CLASSPATH=${CLASSPATH}:${CNCOCR_INSTALL}/lib/$file
done

JAVA_OPTIONS="${JAVA_OPTIONS} -cp ${CLASSPATH}"

CNC_INPUT=$args

###############################################################################
# Building and executing the final command
###############################################################################

CMD="$JAVA ${JAVA_OPTIONS} $CNC_PARSER $CNC_INPUT"

[ -n "$verbose" ] && echo ${CMD}

eval ${CMD}
exit $?
