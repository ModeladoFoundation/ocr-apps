// May 27th 2011 Reservoir Labs Inc proprietary

//
// For this study, we assume a perfect circular flight path centered around
// the center of the image at position (Ix/2, Iy/2) and at height HEIGHT.
// Later on we can add perturbations to this flight path to simulate a real
// flight path.
// The important thing is we do not use the knowledge that the path is a
// circle to change the algorithm.
// Note: considering a perfect circle may be doable using "motion
// compensation" which would require additional FFT/IFFT steps. This is an
// algorithmic change that should be left for later.
//
// To comply with the requirements of the benchmark, we generate the flight
// path in a 3D array that we read to find the locations.
// We assume the radius of the flight path to be 20% wider than the image for
// a radius of 1.2 * sqrt(Ix*Ix + Iy*Iy)/2 (i.e. 0.6 * sqrt(Ix*Ix + Iy*Iy)).
// The maximal distance (i.e. index in PSR) is therefore smaller than:
// sqrt(0.36 * (Ix*Ix + Iy*Iy) + HEIGHT*HEIGHT)
// 
// For a height of 10k and Ix, Iy and RET_PER_PULSE of 32k (Dan Campbell's
// numbers page 7), the maximal index in a PSR column is <= 29k which will not
// overflow.
// 
// We also assume a dR range resolution of 3 which will further reduce the
// spread.
//
// Reference "position 0" is defined as (Ix/2 + r, Iy/2, HEIGHT)
//
// This version is a reasonable base that passes through the RStream
// transformation tool as of May 27th 2011.
//
// The goal of the "image functions" below is to convey the following
// information:
// - given a variation along x or y (the coordinates of the image on the
// ground), the distance  from the plane to the ground varies almost
// linearly. Hence, the column index into the array of responses (PSR) should be 
// properly approximated by a linear function.
// - the row index in the PSR array changes linearly with the induction
// variable along dimension of the plane position.
// 
// RStream's goal is to utilize this information and properly optimize for locality.
icc -fast -parallel -c sar_backprojection.c
icc -fast -parallel -lm sar_backprojection.o -o sar_backprojection
OMP_NUM_THREADS=8 ./sar_backprojection -a128,128,128 -c (where -aX,Y,I sets
the problem size to a value comprised in the "hidden_context")
