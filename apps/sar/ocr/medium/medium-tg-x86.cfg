#
# This file is subject to the license agreement located in the file LICENSE
# and cannot be distributed without it. This notice cannot be
# removed or modified.
#

# ==========================================================================================================
# OCR Config
#
# The general structure is as follows
#
# [Object type n] n = 0..types
#     name = name of type, mandatory
#     other config specific to this type
#
# [Object instance n] n = 0..count
#     id = unique id, mandatory
#     type = <refer to the type above>, mandatory
#     other config specific to this instance
#

# =========================================================================================================
# Guid config
#

[GuidType0]
   name                         = PTR

[GuidInst0]
   id                           = 0
   type                         = PTR


# ==========================================================================================================
# Policy domain config
#

[PolicyDomainType0]
   name                         = CE

[PolicyDomainType1]
   name                         = XE

[PolicydomainInst0]
   id                           = 1-8
   type                         = XE
   worker                       = 0-7
   scheduler                    = 0-7
   commapi                      = 0-7
   allocator                    = 0
   guid                         = 0
   parent                       = 0
   location                     = 0-7
# factories go below here, instances go above here
   taskfactory                  = HC
   tasktemplatefactory          = HC
   datablockfactory             = Regular
   eventfactory                 = HC
#   costfunction                = NULL currently

[PolicydomainInst1]
   id                           = 0
   type                         = CE
   worker                       = 8
   scheduler                    = 8
   commapi                      = 8
   allocator                    = 1-13
   guid                         = 0
   parent                       = 0
   location                     = 8
   neighborcount                = 1
   neighbors                    = 9
# factories go below here, instances go above here
   taskfactory                  = HC
   tasktemplatefactory          = HC
   datablockfactory             = Regular
   eventfactory                 = HC
#   costfunction                = NULL currently

[PolicydomainInst2]
   id                           = 10-17
   type                         = XE
   worker                       = 9-16
   scheduler                    = 9-16
   commapi                      = 9-16
   allocator                    = 14
   guid                         = 0
   parent                       = 9
   location                     = 9-16
# factories go below here, instances go above here
   taskfactory                  = HC
   tasktemplatefactory          = HC
   datablockfactory             = Regular
   eventfactory                 = HC
#   costfunction                = NULL currently

[PolicydomainInst3]
   id                           = 9
   type                         = CE
   worker                       = 17
   scheduler                    = 17
   commapi                      = 17
   allocator                    = 15,16,17,18,19,20,21,22,23,24,11,12,13
   guid                         = 0
   parent                       = 0
   location                     = 17
   neighborcount                = 1
   neighbors                    = 0
# factories go below here, instances go above here
   taskfactory                  = HC
   tasktemplatefactory          = HC
   datablockfactory             = Regular
   eventfactory                 = HC
#   costfunction                = NULL currently

[TaskType0]
   name                         = HC

[TaskTemplateType0]
   name                         = HC

[DataBlockType0]
   name                         = Regular

[EventType0]
   name                         = HC

# ==============================
# Memory Platform config
#

[MemPlatformType0]
   name                         = malloc

[MemPlatformInst0ForNullPlaceholderForXE]
   id                           = 0
   type                         = malloc
   size                         = 0

[MemPlatformInst0ForL1]
   id                           = 1-9
   type                         = malloc
   size                         = 65536       # 64K

[MemPlatformInst0ForL2]
   id                           = 10
   type                         = malloc
   size                         = 2162688     # 2MB+64KB

[MemPlatformInst0ForL3]
   id                           = 11
   type                         = malloc
   size                         = 8454144     # 8MB+64KB

[MemPlatformInst0ForL4]
   id                           = 12
   type                         = malloc
   size                         = 33619968    # 32MB+64KB

[MemPlatformInst0ForGlobalMem]
   id                           = 13
   type                         = malloc
   size                         = 2000065536 # 2 GB+64KB

[MemPlatformInst1ForNullPlaceholderForXE]
   id                           = 14
   type                         = malloc
   size                         = 0

[MemPlatformInst1ForL1]
   id                           = 15-23
   type                         = malloc
   size                         = 65536       # 64K

[MemPlatformInst1ForL2]
   id                           = 24
   type                         = malloc
   size                         = 2162688     # 2MB+64KB

# ==============================
# Memory Target config
#

[MemTargetType0]
   name                         = shared

[MemTargetInst0ForNullPlaceholderForXe]
   id                           = 0
   type                         = shared
   size                         = 0
   memplatform                  = 0
   level                        = 0

[MemTargetInst0ForL1]
   id                           = 1-9
   type                         = shared
   size                         = 49152       # 48KB (less than 64K size of L1 on the notion that some will be taken by static allocations. FIXME)
   memplatform                  = 1-9
   level                        = 1           # L1 is at level 1, the XE level.

[MemTargetInst0ForL2]
   id                           = 10
   type                         = shared
   size                         = 2162688     # 2MB+64KB
   memplatform                  = 10
   level                        = 2           # L2 is at level 2, the Block level.

[MemTargetInst0ForL3]
   id                           = 11
   type                         = shared
   size                         = 8454144     # 8MB+64KB
   memplatform                  = 11
   level                        = 3           # L3 is at level 3, the Unit level.

[MemTargetInst0ForL4]
   id                           = 12
   type                         = shared
   size                         = 33619968    # 32MB+64KB
   memplatform                  = 12
   level                        = 4           # L4 is at level 4, the Chip level.

[MemTargetInst0ForGlobalMem]
   id                           = 13
   type                         = shared
   size                         = 2000065536   # 2 GB+64KB
   memplatform                  = 13
   level                        = 7           # Skipping over provision for Board level and Cabinet level, level 7 is global memory level.

[MemTargetInst1ForNullPlaceholderForXe]
   id                           = 14
   type                         = shared
   size                         = 0
   memplatform                  = 14
   level                        = 0

[MemTargetInst1ForL1]
   id                           = 15-23
   type                         = shared
   size                         = 49152       # 48KB (less than 64K size of L1 on the notion that some will be taken by static allocations. FIXME)
   memplatform                  = 15-23
   level                        = 1           # L1 is at level 1, the XE level.

[MemTargetInst1ForL2]
   id                           = 24
   type                         = shared
   size                         = 2162688     # 2MB+64KB
   memplatform                  = 24
   level                        = 2           # L2 is at level 2, the Block level.

# ==============================
# Allocator config
#

# Allocator types
[AllocatorType0]
   name                         = tlsf

[AllocatorType1]
   name                         = null

# Allocator instances
[AllocatorInst0Null]
   id                           = 0
   type                         = null
   size                         = 0 # 0 MB
   memtarget                    = 0

[AllocatorInst0ForL1]
   id                           = 1-9
   type                         = tlsf
   size                         = 49152       # 48K (estimated L1 left over after non-heap static purposes.  TODO: make this precisely fit leftover space, subject to a minimum for TLSF overhead tables.)
   memtarget                    = 1-9

[AllocatorInst0ForL2]
   id                           = 10
   type                         = tlsf
   size                         = 2097152     # 2M (TODO: same as above.)
   memtarget                    = 10

[AllocatorInst0ForL3]
   id                           = 11
   type                         = tlsf
   size                         = 8388608     #8M (TODO: same as above.)
   memtarget                    = 11
   slicecount                   = 4           # Lop this many "slices" off the overall size.  The slices will be utilized
                                              # in round-robin fashion at demand time.  Slicing reduces contention.
   slicesize                    = 65536       # Slices will be of this size.  (Gross size:  includes pool_t header and all block header_t's)

[AllocatorInst0ForL4]
   id                           = 12
   type                         = tlsf
   size                         = 33554432    # 32M (TODO: same as above.)
   memtarget                    = 12
   slicecount                   = 32          # Lop this many "slices" off the overall size.  The slices will be utilized
                                              # in round-robin fashion at demand time.  Slicing reduces contention.
   slicesize                    = 524288      # Slices will be of this size.  (Gross size:  includes pool_t header and all block header_t's)

[AllocatorInst0ForGlobalMem]
   id                           = 13
   type                         = tlsf
   size                         = 2000000000   # 2 GB just a proxy for how large main memory might end up being.  TODO: same as above.)
   memtarget                    = 13
   slicecount                   = 384         # Lop this many "slices" off the overall size.  The slices will be utilized
                                              # in round-robin fashion at demand time.  Slicing reduces contention.
   slicesize                    = 524288      # Slices will be of this size.  (Gross size:  includes pool_t header and all block header_t's)


# Allocator instances
[AllocatorInst1Null]
   id                           = 14
   type                         = null
   size                         = 0 # 0 MB
   memtarget                    = 14

[AllocatorInst1ForL1]
   id                           = 15-23
   type                         = tlsf
   size                         = 49152       # 48K (estimated L1 left over after non-heap static purposes.  TODO: make this precisely fit leftover space, subject to a minimum for TLSF overhead tables.)
   memtarget                    = 15-23

[AllocatorInst1ForL2]
   id                           = 24
   type                         = tlsf
   size                         = 2097152     # 2M (TODO: same as above.)
   memtarget                    = 24


# ==============================
# Comm platform config
#

[CommPlatformType0]
   name                         = CePthread

[CommPlatformType1]
   name                         = XePthread

[CommPlatformInst0]
   id                           = 8
   type                         = CePthread # Refer to the type by name

[CommPlatformInst1]
   id                           = 0-7
   type                         = XePthread # Refer to the type by name

[CommPlatformInst2]
   id                           = 17
   type                         = CePthread # Refer to the type by name

[CommPlatformInst3]
   id                           = 9-16
   type                         = XePthread # Refer to the type by name


# ==============================
# Comm API config
#

[CommApiType0]
   name                         = Handleless

[CommApiInst0]
   id                           = 0-17
   type                         = Handleless
   commplatform                 = 0-17

# ==============================
# Comp platform config
#

[CompPlatformType0]
   name                         = pthread
   stacksize                    = 0 # in MB

[CompPlatformInst0]
   id                           = 0-7
   type                         = pthread # Refer to the type by name
   stacksize                    = 0 # in MB
   ismasterthread               = 0

[CompPlatformInst1]
   id                           = 8
   type                         = pthread # Refer to the type by name
   stacksize                    = 0 # in MB
   ismasterthread               = 1

[CompPlatformInst2]
   id                           = 9-16
   type                         = pthread # Refer to the type by name
   stacksize                    = 0 # in MB
   ismasterthread               = 0

[CompPlatformInst3]
   id                           = 17
   type                         = pthread # Refer to the type by name
   stacksize                    = 0 # in MB
   ismasterthread               = 0

# ==============================
# Comp target config
#

[CompTargetType0]
   name                         = PASSTHROUGH
   frequency                    = 3400 # in MHz

[CompTargetInst0]
   id                           = 0-17
   type                         = PASSTHROUGH
   compplatform                 = 0-17

# ==============================
# Worker config
#

[WorkerType0]
   name                         = CE

[WorkerType1]
   name                         = XE

[WorkerInst0]
   id                           = 0-7
   type                         = XE
   workertype                   = slave
   comptarget                   = 0-7

[WorkerInst1]
   id                           = 8
   type                         = CE
   workertype                   = master
   comptarget                   = 8

[WorkerInst2]
   id                           = 9-16
   type                         = XE
   workertype                   = slave
   comptarget                   = 9-16

[WorkerInst3]
   id                           = 17
   type                         = CE
   workertype                   = slave
   comptarget                   = 17

# ==============================
# Workpile config
#

[WorkPileType0]
   name                         = CE

[WorkPileType1]
   name                         = XE

[WorkpileInst0]
   id                           = 0-7
   type                         = XE

[WorkpileInst1]
   id                           = 8
   type                         = CE

[WorkpileInst2]
   id                           = 9-16
   type                         = XE

[WorkpileInst3]
   id                           = 17
   type                         = CE

# ==============================
# Scheduler config
#

[SchedulerType0]
   name                         = CE

[SchedulerType1]
   name                         = XE

[SchedulerInst0]
   id                           = 0-7
   type                         = XE
   workpile                     = 0-7

[SchedulerInst1]
   id                           = 8
   type                         = CE
   workpile                     = 8
   workeridfirst                = 8

[SchedulerInst2]
   id                           = 9-16
   type                         = XE
   workpile                     = 9-16

[SchedulerInst3]
   id                           = 17
   type                         = CE
   workpile                     = 17
   workeridfirst                = 17

