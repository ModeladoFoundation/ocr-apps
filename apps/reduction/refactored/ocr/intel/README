This directory provides an implementation of reductions using labeled GUIDs.

***************************************************************************
This code currently suffers from bug 627.  The print statement before the
add dependency in test.c is uncommented to slow down the EDTs a bit and make it
less likely to hit the bug.  If you get a SegFault in the AddDependency
you have hit the bug.  If you make the "wait" longer you are less likely to
hit it.
******************************************************************************


Labeled GUIDs are currently experimental so it is necessary to include

#define ENABLE_EXTENSION_LABELING
#include "extensions/ocr-labeling.h"

it is also necessary to change the GUID factory to "LABELED" as done in the generated.cfg file in this directory

****Note that labeled GUIDs are currently only supported on X86****


gsLib.c : the reduction code.

test.c : a sample driver which implements addition, but the reductionFunction can be changed to any desired reduction

Any driver code for the library must:
define reductionFunction
reserve numnodes-1 STICKY GUIDs
reserve 2 ONCE GUIDs
create the reduceEdt Template
create numnodes+1 datablocks
launch numnodes computeEdts

each computeEdt
computes its local contribution to the reduction
creates a once event (alternate between the two GUIDs)
clones itself depending on the ONCE event
creates and launches a reduceEdt
ends

The reduceEdts cooperate the return the answer in the special datablock to
all of the clones by satisfying the ONCE event

The bash script go.sh invokes the code pointing to the local .cfg file



