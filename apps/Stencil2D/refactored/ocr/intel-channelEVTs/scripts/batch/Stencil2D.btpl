#!/bin/bash -l
#SBATCH -p ARG_QUEUE
#SBATCH -N ARG_NODE_SCALING
#SBATCH -t ARG_HOUR:ARG_MIN:00
#SBATCH -J ARG_SCALING_TYPE_ARG_NAME.ARG_NODE_SCALINGN
#SBATCH -o ARG_SCALING_TYPE_ARG_NAME.ARG_NODE_SCALINGN
#SBATCH -L SCRATCH

export RUN_MODE=runApp

export REPO_TOP=ARG_REPO_TOP
export XST_BATCH="yes"
. ${REPO_TOP}/ocr/ocr/scripts/xs-tools/jump_mpi_ws ${REPO_TOP}

cd ${REPO_TOP}/apps/apps/Stencil2D/refactored/ocr/intel-channelEVTs
export OCR_NUM_NODES=ARG_NODE_SCALING

function myroot()
{
    local v1=`echo "e(l($1)/$2)" | bc -l`
    awk -vn1=$v1 'BEGIN{printf("%d\n",n1)}'
}

function runnerWorkloadArguments {
    scale_factor=`myroot ${nodes} 2`
    export WORKLOAD_ARGS="$((${scale_factor}*8640)) ${pes_comp} 200"
}

export SCALING_TYPE="ARG_SCALING_TYPE"

echo "SLURM_JOB_NUM_NODES=${SLURM_JOB_NUM_NODES}"
if [[ "${SCALING_TYPE}" == "ws" ]]; then
    scale_factor=`myroot ${SLURM_JOB_NUM_NODES} 2`
else
    scale_factor=1
fi

export NODE_SCALING="ARG_NODE_SCALING"
export CORE_SCALING="ARG_CORE_SCALING"
. ./scripts/scaling.sh
