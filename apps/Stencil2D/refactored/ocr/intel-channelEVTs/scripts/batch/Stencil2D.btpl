#!/bin/bash -l
#SBATCH -p TPLARG_QUEUE
#SBATCH -N TPLARG_NODE_SCALING
#SBATCH -t TPLARG_HOUR:TPLARG_MIN:00
#SBATCH -J TPLARG_SCALING_TYPE_TPLARG_NAME.TPLARG_NODE_SCALINGN
#SBATCH -o TPLARG_SCALING_TYPE_TPLARG_NAME.TPLARG_NODE_SCALINGN
#SBATCH -L SCRATCH

export OCR_INSTALL=TPLARG_OCR_INSTALL
export RUN_MODE=runApp

export REPO_TOP=TPLARG_REPO_TOP
export XST_BATCH="yes"
.  ${REPO_TOP}/ocr/ocr/scripts/xs-tools/jump_mpi_ws ${REPO_TOP}

export tile=${tile-TPLARG_TILE}
export iter=${iter-TPLARG_ITER}

if [[ ${XST_BATCH} == "yes" ]]; then
    if [[ ${SLURM_SUBMIT_DIR} != "" ]]; then
        # arrange for logs to be under the submit folder
        submitdirName=${SLURM_SUBMIT_DIR##*/}
        rundirName="rundir.TPLARG_SCALING_TYPE_TPLARG_NAME.TPLARG_NODE_SCALINGN"
        mkdir -p ${submitdirName}/${rundirName}
        export LOGDIR="${submitdirName}/${rundirName}"
    fi
fi

cd ${REPO_TOP}/apps/apps/Stencil2D/refactored/ocr/intel-channelEVTs

export OCR_NUM_NODES=TPLARG_NODE_SCALING

function myroot()
{
    local v1=`echo "e(l($1)/$2)" | bc -l`
    awk -vn1=$v1 'BEGIN{printf("%d\n",n1)}'
}

function runnerWorkloadArguments {
    # To hack the first worker to be a computation worker in single-node distributed
    # Add 1 to pes_comp because the scaling driver substract one by default for distributed
    if [[ $HACK_SPECIAL_WORKER == "HC" ]]; then
        pes_comp=$(( $pes_comp + 1 ))
    fi

    # Adjust number of domains when reaching the maximum number of cores per nodes
    # On edison, that's the core upper bound
    #Hmm, this is really bad for OCR + static scheduler
    if [[ "${pes_per_node}" == "24" ]]; then
        domainCount=${pes_all}
    else
        domainCount=${pes_comp}
    fi
    scale_factor=`myroot ${domainCount} 2`
    export WORKLOAD_ARGS="$((${scale_factor}*${tile})) ${domainCount} ${iter}"
}

lscpu

export CFGARG_SCHEDULER="STATIC"
#export CFGARG_TARGET="mpi_probe"

export NODE_SCALING="TPLARG_NODE_SCALING"
export CORE_SCALING="TPLARG_CORE_SCALING"
export NB_RUN="TPLARG_NB_RUN"
export WORKLOAD_INSTALL_ROOT="TPLARG_APP_INSTALL"
. ./scripts/scaling.sh