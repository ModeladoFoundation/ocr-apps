# ==============================================================================
#
# Software tools testing configuration file for F_SIM
#
# This file demonstrates how to set various parameters for the simulator
#
# Parameters have scoping rules - closer to actual specific agents in the block
# over-ride global settings.
#
# For example, the "verbose" flag may be over-ridden by later stages of
# configuration.  The global setting # is least-binding, while the per-unit
# setting is most binding.  So if a specific agent setting says "be # verbose",
# then it does not matter what other settings indicated.
#
# ==============================================================================
#

[TricksGlobal]
   cfg_area_size = 4     # KB reserved by the ELF loader process

[EnergyGlobal]
   max_freq_MHz  = 1000  # maximum core frequency

[MachineGlobal]
   rack_count    = 1     # number of racks in the machine
   cube_count    = 1     # number of hypercube 8-socket units per rack
   socket_count  = 1     # number of populated sockets per hypercube
   trace         = 0     # level and types of trace info to log in output (0 = off)
   verbose       = false  # default don't speak about spurious things

[SocketGlobal]
   #
   # Note: we're not implementing DRAM in the SW test configuration
   #
   ipm_count     = 1     # number of MCs to internal in-package memory per socket
   ipm_size      = 16    # size in MB per MC for IPM

   dram_count    = 0     # number of MCs to external DRAM banks per socket
   dram_size     = 16384 # size in MB per MC for external DRAM

   nvm_count     = 0     # number of MCs to external NVM banks per socket
   nvm_size      = 128   # size in MB per MC for external NVM

   cluster_count = 1     # number of on-die clusters per socket
   #
   # We're not using the qemu emulated CE and RMD kernel - ignored
   #
   # dram_ce_fname =     # file to load
   # dram_xe_fname =     # file to load
   # dram_fw_fname =     # CE firmware

[ClusterGlobal]
   sL3_count     = 1     # how many logical sL3 units exist per cluster
   sL3_size      = 8     # size in KB for each sL3 unit per cluster
   verbose       = false
   block_count   = 1

[ipmGlobal]
   verbose       = false

[dramGlobal]
   verbose       = false

[nvmGlobal]
   verbose       = false

[sl3Global]
   verbose       = false

[BlockGlobal]
   ce_count      = 1     # scaffolded CE
   xe_count      = 8     # eight XE units in a block
   nlni_count    = 1     # one next-level network-interface module per block is expected
   lsqdepth      = 16    # How many buffer slots does the common network interface
                         #  use for in/out queues (originating)
   lsqnetdepth   = 16    # How many buffer slots does the common network interface
                         #  use for in/out queues (receiving)
   sl2_count     = 1     # how many logical sL2 entities per block
   sl2_size      = 4096  # how many KB is each sL2 entity
   sl1_size      = 64    # how many KB is each sL1 entity
   num_chains    = 8     # how many concurrent hardware chains does each chain unit support
   num_dma_buffers = 8   # how many active concurrent DMA operations can be in
                         #  progress in the DMA unit
   num_dma_ops     = 16  # how many DMA operations can be floating around per DMA unit
   num_qma_queues  = 8   # how many QMA queues will each QMA unit offer
   num_qma_ops     = 16  # how many QMA operations can be in flight around the QMA queues
   verbose       = false  # global setting: should we be verbose or not?
                         #  Can be over-ridden per unit below
   logfilebase   = sw.log # what is the BASE path+filename to write log files to,
                          #  default is STDERR

[sl2Global]
   verbose       = false

[CEglobal]
   logfile_redir = 1       # ignore normal logfile routines; redirect all output
                           #  for these to STDOUT if set to non-zero value
   verbose       = false
   trace         = 0       # per bit definitions in ce-scaffold.h (TBD)
   no_qemu_args  = true

[ce0]
   enabled       = true

[XEglobal]
   cache_defined = 1       # create a cache module for this agent class
   trace         = 0
   verbose       = false
   stack_size    = 8192    # 8kb
   # stack_top     =       # internal default - the top of XE L1
   # xe_filename   =       # only used if env var FSIM_XE_FILENAME not defined

[xe0]
   enabled       = true
   # stack_load  = 1       # internal default - 1 = load stack for this XE

[xe1]
   enabled       = true
   # stack_load  = 1       # internal default - 1 = load stack for this XE
# ==============================================================================
# Configure the basic parameters of each next-level network-interface unit
#

[NLNIglobal]
   verbose       = false
