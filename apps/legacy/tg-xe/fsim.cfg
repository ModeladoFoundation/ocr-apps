# =====================================================================================
#
# Configuration for TG baremetal runtime tests
#
# This cfg file requires that the environment var TEST be defined and set to the XE
# ELF file name
# =====================================================================================

[environment]
    TG_INSTALL = ../../../../tg/tg/install/
    TGKRNL = ../../libs/install/tg-xe/lib/tgkrnl-tgr
    TEST_ARGS =

[TricksGlobal]
   cfg_area_size = 4         # KB reserved by the ELF loader process

[MachineGlobal]
   rack_count    = 1         # number of racks in the machine
   cube_count    = 1         # number of hypercube 8-socket units per rack
   socket_count  = 1         # number of populated sockets per hypercube
   trace         = 0         # level and types of trace info to log in output (0 = off)
   verbose       = false     # default don't speak about spurious things

[Machines]
    machine_count = 1

[machine0]
    max_blocks = 10
    name = localhost

[SocketGlobal]
   ipm_count     = 1         # number of MCs to internal in-package memory per socket
   ipm_size      = 64        # size in MB per MC for IPM

   dram_count    = 1         # number of MCs to external DRAM banks per socket
   dram_size     = 1056      # size in MB per MC for external DRAM

   nvm_count     = 0         # number of MCs to external NVM banks per socket
   nvm_size      = 128       # size in MB per MC for external NVM

   cluster_count = 1         # number of on-die clusters per socket

   fw_img_fname  = $(TG_INSTALL)/lib/fw.img     # CE firmware
   ce_img_fname  = $(TGKRNL)                    # CE file to load
   xe_img_fname  = $(TEST)  # XE file to load

[ipmGlobal]
   verbose       = false
   ipm_latency   = 50

[ipm0]
   enabled       = true
   ipm_size      = 1024

[DramGlobal]
   verbose       = false
   dram_latency   = 50

[nvmGlobal]
   verbose       = false
   nvm_latency   = 150

[ClusterGlobal]
   sL3_count     = 1         # how many logical sL3 units exist per cluster
   sL3_size      = 128         # size in KB for each sL3 unit per cluster
   verbose       = false
   block_count   = 1

[sl3Global]
   verbose       = false
   sl3_latency   = 11

[BlockGlobal]
   ce_count      = 1
   xe_count      = 8         # up to eight XE units in a block
   nlni_count    = 1         # one next-level network-interface module per block
   lsqdepth      = 16        # How many buffer slots does the common network interface
                             #   use for in/out queues (originating)
   lsqnetdepth   = 16        # How many buffer slots does the common network interface
                             #   use for in/out queues (receiving)
   sl2_count     = 1         # how many logical sL2 entities per block
   sl2_size      = 4096      # how many KB is each sL2 entity
   sl1_size      = 64        # how many KB is each sL1 entity
   num_chains    = 8         # how many concurrent hardware chains does
                             #   each chain unit support
   num_dma_buffers = 8       # how many active concurrent DMA operations can be
                             #   in progress in the DMA unit
   num_dma_ops     = 16      # how many DMA operations can be floating around per
                             #   DMA unit
   num_qma_queues  = 8       # how many QMA queues will each QMA unit offer
   num_qma_ops     = 16      # how many QMA operations can be in flight around the
                             #   QMA queues
   verbose         = false   # global setting: should we be verbose or not?
                             #   Can be over-ridden per unit below
   trace           = 0x000000000  # per bit definitions in ss/common/include/tg-trace.h
   cache_defined = 1              # create a cache module for this agent class
   cache_sizeKB    = 32           # size in KB for cache module
   cache_assoc   = 4              # associativity for the cache
   cache_lineSZ  = 64             # line size in bytes for cache module
   cache_policy  = 0x5            # policy for the cache; at this time, only mode "0x5"
                                  # (write-back, write-allocate) is supported!
   logfilebase   = $(TEST)        # what is the BASE path+filename to write log
                                       #files to, default is STDERR

[sl2Global]
   verbose       = false
   sl2_latency   = 4

[CEglobal]
   qemu_args     =                    # command-line to provide to QEMU
   krnl_args  = -xe-args $(TEST) $(TEST_ARGS)  # extra args to provide to TGKRNL
   logfile_redir = 0                   # ignore normal logfile routines;
                                       #  redirect all output for these to
                                       #  STDOUT if set to non-zero value
   cache_defined = 1                   # create a cache module for this agent class
   verbose       = false
   trace         = 0x000000000         # per bit definitions in ss/common/include/tg-trace.h
   enable        = true

[XEglobal]
   cache_defined = 1                  # create a cache module for this agent class
   trace         = 0                  # XE_INSN, XE_INSN_EXTRA, ENABLE = 7
   verbose       = false
   enabled       = true

# =====================================================================================
# Configure the basic parameters of each next-level network-interface unit
#

[NLNIglobal]
   verbose       = false
