# This file is subject to the license agreement located in the file LICENSE
# and cannot be distributed without it. This notice cannot be
# removed or modified.

# APPS
APPS_ROOT       ?= ../../../../../apps
#APPS_LIBS_ROOT  ?= ../../../../../apps/libs/x86

# OCR_TYPE
OCR_TYPE        ?= x86

# OCR

OCR_ROOT     ?= ../../../../../../ocr/ocr
OCR_INSTALL ?= ${OCR_ROOT}/install
OCR_BUILD_ROOT   ?= ${OCR_ROOT}/build

# APPLICATION
WORKLOAD_SRC          ?= .
WORKLOAD_BUILD_ROOT   ?= ./build
WORKLOAD_INSTALL_ROOT ?= ./install

# If 0, the workload has no input file
# If 1+, this is the index in the argument
# list after which everything is considered an
# input file. Note that the index STARTS AT 1
WORKLOAD_INPUT_FILE_IDX := 0

# You can specify default arguments here. These
# will be overriden by (in order):
#   - the WORKLOAD_ARGS environment variable
#   - the arguments passed to 'make run'
# To restate, the arguments passed to make run have
# the highest priority and will override both the
# default arguments here and the ones passed through
# an environment variable
#WORKLOAD_ARGS ?= --num_refine 5 --npx 4 --npy 3 --npz 4 --nx 10 --ny 8 --nz 6 --num_objects 1 --object 2 0 -1.71 -1.71 -1.71 0.04 0.04 0.04 1.7 1.7 1.7 0.0 0.0 0.0 --num_tsteps 100 --checksum_freq 1 --report_perf 15 --num_vars 2 --comm_vars 2 --plot_freq 1 --stages_per_ts 2 --refine_freq 2 --block_change 3
#WORKLOAD_ARGS ?= --num_refine 4 --npx 3 --npy 3 --npz 3 --nx 8 --ny 8 --nz 8 --num_objects 1 --object 2 0 -0.11 -0.11 -0.11 0.40 0.40 0.40 1.7 1.7 1.7 0.0 0.0 0.0 --num_tsteps 50 --checksum_freq 1 --report_perf 15 --num_vars 2 --comm_vars 2 --plot_freq 1 --stages_per_ts 2 --refine_freq 2 --block_change 2
#WORKLOAD_ARGS ?= --num_refine 4 --npx 3 --npy 1 --npz 1 --nx 8 --ny 8 --nz 8 --num_objects 1 --object 2 0 -0.11 -0.11 -0.11 0.04 0.04 0.04 1.7 1.7 1.7 0.0 0.0 0.0 --num_tsteps 50 --checksum_freq 1 --report_perf 15 --num_vars 2 --comm_vars 2 --plot_freq 1 --stages_per_ts 2 --refine_freq 2 --block_change 2
#WORKLOAD_ARGS ?= --num_refine 4 --npx 2 --npy 1 --npz 1 --nx 8 --ny 8 --nz 8 --num_objects 1 --object 2 0 -0.11 -0.11 -0.11 0.04 0.04 0.04 1.7 1.7 1.7 0.0 0.0 0.0 --num_tsteps 50 --checksum_freq 10 --report_perf 15 --num_vars 2 --comm_vars 2 --plot_freq 1 --stages_per_ts 2 --refine_freq 2 --block_change 2
#WORKLOAD_ARGS ?= --num_refine 1 --npx 2 --npy 1 --npz 1 --nx 4 --ny 4 --nz 4 --num_objects 1 --object 2 0 -0.11 -0.11 -0.11 0.04 0.04 0.04 1.7 1.7 1.7 0.0 0.0 0.0 --num_tsteps 50 --checksum_freq 50 --report_perf 15 --num_vars 1 --comm_vars 1 --plot_freq 1 --stages_per_ts 2 --refine_freq 2 --block_change 2
#WORKLOAD_ARGS ?= --num_refine 1 --npx 2 --npy 1 --npz 1 --nx 2 --ny 2 --nz 2 --num_objects 1 --object 2 0 -0.11 -0.11 -0.11 0.40 0.80 0.80 1.7 1.7 1.7 0.0 0.0 0.0 --num_tsteps 4 --checksum_freq 50 --report_perf 15 --num_vars 1 --comm_vars 1 --plot_freq 50 --stages_per_ts 1 --refine_freq 1 --block_change 2
#WORKLOAD_ARGS ?= --num_refine 2 --npx 2 --npy 2 --npz 2 --nx 8 --ny 8 --nz 8 --num_objects 1 --object 2 0 -0.11 -0.11 -0.11 0.04 0.04 0.04 1.7 1.7 1.7 0.0 0.0 0.0 --num_tsteps 20 --checksum_freq 1 --report_perf 15 --num_vars 2 --comm_vars 2 --plot_freq 1 --stages_per_ts 2 --refine_freq 2 --block_change 2
##WORKLOAD_ARGS ?= --num_refine 3 --npx 2 --npy 1 --npz 1 --nx 8 --ny 8 --nz 8 --num_objects 1 --object 2 0 -0.11 -0.11 -0.11 0.04 0.04 0.04 1.7 1.7 1.7 0.0 0.0 0.0 --num_tsteps 20 --checksum_freq 1 --report_perf 15 --num_vars 2 --comm_vars 2 --plot_freq 1 --stages_per_ts 2 --refine_freq 2 --block_change 2
WORKLOAD_ARGS ?= --num_refine 2 --npx 2 --npy 1 --npz 1 --nx 8 --ny 8 --nz 8 --num_objects 1 --object 2 0 -0.11 -0.11 -0.11 0.04 0.04 0.04 1.7 1.7 1.7 0.0 0.0 0.0 --num_tsteps 20 --checksum_freq 1 --report_perf 15 --num_vars 2 --comm_vars 2 --plot_freq 1 --stages_per_ts 2 --refine_freq 2 --block_change 2
#WORKLOAD_ARGS ?= --num_refine 1 --npx 2 --npy 1 --npz 1 --nx 8 --ny 8 --nz 8 --num_objects 1 --object 2 0 -0.11 -0.11 -0.11 0.04 0.04 0.04 1.7 1.7 1.7 0.0 0.0 0.0 --num_tsteps 1 --checksum_freq 1 --report_perf 15 --num_vars 1 --comm_vars 2 --plot_freq 1 --stages_per_ts 1 --refine_freq 2 --block_change 2
#WORKLOAD_ARGS ?= --num_refine 1 --npx 2 --npy 1 --npz 1 --nx 2 --ny 2 --nz 4 --num_objects 1 --object 2 0 -0.11 -0.11 -0.11 0.04 0.04 0.04 1.7 1.7 1.7 0.0 0.0 0.0 --num_tsteps 1 --checksum_freq 10 --report_perf 15 --num_vars 1 --comm_vars 2 --plot_freq 10 --stages_per_ts 1 --refine_freq 1 --block_change 2
#WORKLOAD_ARGS ?= --num_refine 1 --npx 2 --npy 1 --npz 1 --nx 2 --ny 2 --nz 2 --num_objects 1 --object 2 0 -0.11 -0.11 -0.11 0.04 0.04 0.04 1.7 1.7 1.7 0.0 0.0 0.0 --num_tsteps 20 --checksum_freq 1 --report_perf 15 --num_vars 1 --comm_vars 1 --plot_freq 1 --stages_per_ts 2 --refine_freq 2 --block_change 2
#WORKLOAD_ARGS ?= --num_refine 1 --npx 2 --npy 1 --npz 1 --nx 2 --ny 2 --nz 2 --num_objects 1 --object 2 0 -0.11 -0.11 -0.11 0.04 0.04 0.04 1.7 1.7 1.7 0.0 0.0 0.0 --num_tsteps 20 --checksum_freq 1 --report_perf 15 --num_vars 1 --comm_vars 1 --plot_freq 1 --stages_per_ts 2 --refine_freq 2 --block_change 1
#WORKLOAD_ARGS ?= --num_refine 1 --npx 2 --npy 1 --npz 1 --nx 2 --ny 2 --nz 2 --num_objects 1 --object 2 0 -0.11 -0.11 -0.11 0.04 0.04 0.04 1.7 1.7 1.7 0.0 0.0 0.0 --num_tsteps 20 --checksum_freq 100 --report_perf 15 --num_vars 1 --comm_vars 1 --plot_freq 100 --stages_per_ts 2 --refine_freq 2 --block_change 1

# Run mode (not fully supported)
# Set to "yes" if running with torque
RUN_TORQUE ?= no
# Set to "yes" if Jenkins is running this job as an automated test
RUN_JENKINS ?= no
# Set to yes if running visualizer or export as environment variable
ENABLE_VISUALIZER ?= no
## END of variables coming from user/environment

CONFIG_FLAGS=--guid LABELED

include ${APPS_ROOT}/makefiles/make-pre.inc

# Name of the application to build
TARGET := miniAMR.x

# Space separated list of directory names in apps/libs/src
# that need to be built. These will be built for ARCH
REQ_LIBS :=

# Space separated list of source files
#SRCS := block.c  chksum.c  comm.c  clone.c  init.c  move.c  parent.c  plot.c  stencil.c  refine.c  root.c  util.c  wtime.c

SRCS := mainOCR.c

# Additional CFLAGS. By default, it includes
# all OCR required includes and apps/libs/<target>/include
# TG_ARCH is also defined for Fsim
CFLAGS := -Wall -fms-extensions -DBUILD_OCR_VERSION -DENABLE_EXTENSION_LABELING -DRELAX_DATABLOCK_SEASONINGx -DNANNY_ON_STEROIDSx -DNANNY_FUNC_NAMES -lefence -g -O0
CFLAGS += -DENABLE_EXTENSION_CHANNEL_EVT
CFLAGS += -DENABLE_EXTENSION_AFFINITY
CFLAGS += -DOCR_ASSERT
CFLAGS += -DENABLE_EXTENSION_PARAMS_EVT
CFLAGS += -DENABLE_EXTENSION_COUNTED_EVT

# Additional LDFLAGS. By default, it includes
# the required OCR library path and apps/libs/<target/lib
# Note that none of the specific libraries specified in
# REQ_LIBS are included.
#LDFLAGS := -lpthread -lm -L/opt/intel/tools/compilers_and_libraries/linux/mpi/lib64 -lmpi
LDFLAGS := -lpthread -lm

# Targets:
#   - all:     Build the application.
#   - debug:   Build the debug version of the application
#   - install: Build and install
#   - run:     Run the application
all:	CFLAGS += -O2 -g
all:	TARGETS := all
all:	default

debug:	CFLAGS += -O0
debug:	TARGETS := debug
debug:	default

install: all

# This rule will be executed prior to execution:
#  - For the FSim target, this happens when the binary is built
#  - For all other targets this happens prior to running the
#    executable
# WORKLOAD_ARGS and WORKLOAD_INPUTS are available
# to you and contain, respectively, the non file
# arguments and the file arguments. They will be
# passed directly to the application unless you
# modify them. You can use the following
# syntax to do so:
# $(eval WORKLOAD_INPUTS := something) or
# $(eval WORKLOAD_INPUTS := $(shell <script>))
# The second syntax will execute <script> and assign
# its output to WORKLOAD_INPUTS
#
# You may also want to assign a value to WORKLOAD_OUTS
# which should contain the list of output files produced
# by the application (to be passed to postrun). This is
# taken-care of for you on FSim but not on any of the
# other platforms.
# 'prerun: ;' is an empty rule (the rule is required)
.PHONY: prerun
prerun: ;

# This rule will be executed after execution
# The variable ${WORKLOAD_OUTS} contains a space separated
# list of output files
# 'postrun: ;' is an empty rule (the rule is required
# to be present though)
.PHONY: postrun
postrun: ;

# Include common part
include ${APPS_ROOT}/makefiles/make-inc.inc

