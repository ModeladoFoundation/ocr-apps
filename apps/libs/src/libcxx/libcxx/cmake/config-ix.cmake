if(LIBCXX_TARGET STREQUAL "XSTG" )
 message(STATUS "Configuring for XSTG")
 set(LIBCXX_SUPPORTS_STD_EQ_CXX14_FLAG TRUE)
 set(LIBCXX_SUPPORTS_STDCXX11_FLAG TRUE)
 set(LIBCXX_SUPPORTS_STDCXX1Y_FLAG TRUE)
 set(LIBCXX_SUPPORTS_FPIC_FLAG FALSE)
 set(LIBCXX_SUPPORTS_FNO_OMIT_FRAME_POINTER_FLAG TRUE)
 set(LIBCXX_SUPPORTS_NODEFAULTLIBS_FLAG TRUE)
 set(LIBCXX_SUPPORTS_FNOSTDINCXX_FLAG TRUE)
 set(LIBCXX_SUPPORTS_WALL_FLAG TRUE)
 set(LIBCXX_SUPPORTS_W_FLAG TRUE)
 set(LIBCXX_SUPPORTS_WNO_UNUSED_PARAMETER_FLAG TRUE)
 set(LIBCXX_SUPPORTS_WWRITE_STRINGS_FLAG TRUE)
 set(LIBCXX_SUPPORTS_WNO_LONG_LONG_FLAG TRUE)
 set(LIBCXX_SUPPORTS_PEDANTIC_FLAG TRUE)
 set(LIBCXX_SUPPORTS_WERROR_FLAG TRUE)
 set(LIBCXX_SUPPORTS_WNO_ERROR_FLAG TRUE)
 set(LIBCXX_SUPPORTS_FNO_EXCEPTIONS_FLAG TRUE)
 set(LIBCXX_SUPPORTS_FNO_RTTI_FLAG TRUE)
 set(LIBCXX_SUPPORTS_GLINE_TABLES_ONLY_FLAG TRUE)
 set(LIBCXX_SUPPORTS_WX_FLAG FALSE)
 set(LIBCXX_SUPPORTS_NO_WX_FLAG FALSE)
 set(LIBCXX_SUPPORTS_EHSC_FLAG FALSE)
 set(LIBCXX_SUPPORTS_NO_EHS_FLAG FALSE)
 set(LIBCXX_SUPPORTS_NO_EHA_FLAG FALSE)
 set(LIBCXX_SUPPORTS_NO_GR_FLAG FALSE)

elseif(LIBCXX_TARGET STREQUAL "x86_64" )
 message(STATUS "Configuring for x86_64")
 set(LIBCXX_HAS_STDCXX11_FLAG TRUE)
 set(LIBCXX_HAS_STDCXX1Y_FLAG TRUE)
 set(LIBCXX_HAS_FPIC_FLAG FALSE)
 set(LIBCXX_HAS_FNO_OMIT_FRAME_POINTER_FLAG TRUE)
 set(LIBCXX_HAS_FNODEFAULTLIBS_FLAG TRUE)
 set(LIBCXX_HAS_FNOSTDINCXX_FLAG TRUE)
 set(LIBCXX_HAS_WALL_FLAG TRUE)
 set(LIBCXX_HAS_W_FLAG TRUE)
 set(LIBCXX_HAS_WNO_UNUSED_PARAMETER_FLAG TRUE)
 set(LIBCXX_HAS_WWRITE_STRINGS_FLAG TRUE)
 set(LIBCXX_HAS_WNO_LONG_LONG_FLAG TRUE)
 set(LIBCXX_HAS_PEDANTIC_FLAG TRUE)
 set(LIBCXX_HAS_WERROR_FLAG TRUE)
 set(LIBCXX_HAS_WNO_ERROR_FLAG TRUE)
 set(LIBCXX_HAS_FNO_EXCEPTIONS_FLAG TRUE)
 set(LIBCXX_HAS_FNO_RTTI_FLAG TRUE)
 set(LIBCXX_HAS_GLINE_TABLES_ONLY_FLAG TRUE)
 set(LIBCXX_HAS_WX_FLAG FALSE)
 set(LIBCXX_HAS_NO_WX_FLAG FALSE)
 set(LIBCXX_HAS_EHSC_FLAG FALSE)
 set(LIBCXX_HAS_NO_EHS_FLAG FALSE)
 set(LIBCXX_HAS_NO_EHA_FLAG FALSE)
 set(LIBCXX_HAS_NO_GR_FLAG FALSE)

else()

include(CheckLibraryExists)
include(CheckCXXCompilerFlag)
include(CheckLibcxxAtomic)

# Check compiler flags

check_cxx_compiler_flag(/WX                     LIBCXX_HAS_WX_FLAG)
check_cxx_compiler_flag(/WX-                    LIBCXX_HAS_NO_WX_FLAG)
check_cxx_compiler_flag(/EHsc                   LIBCXX_HAS_EHSC_FLAG)
check_cxx_compiler_flag(/EHs-                   LIBCXX_HAS_NO_EHS_FLAG)
check_cxx_compiler_flag(/EHa-                   LIBCXX_HAS_NO_EHA_FLAG)
check_cxx_compiler_flag(/GR-                    LIBCXX_HAS_NO_GR_FLAG)


# Check libraries
check_library_exists(pthread pthread_create "" LIBCXX_HAS_PTHREAD_LIB)
check_library_exists(c fopen "" LIBCXX_HAS_C_LIB)
check_library_exists(m ccos "" LIBCXX_HAS_M_LIB)
check_library_exists(rt clock_gettime "" LIBCXX_HAS_RT_LIB)
check_library_exists(gcc_s __gcc_personality_v0 "" LIBCXX_HAS_GCC_S_LIB)
endif()
