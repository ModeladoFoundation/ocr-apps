=======================================================
"Other" Regression Test Suit
=======================================================

-----------------
Running the tests
-----------------

Before running a test, you must build all of the required files first. See the section
`Building for the Tests' below.

This test suite consists of several sets of tests which test fsim, fsim-rtlsim, and fsim-swtest.
The files which can be run are:

    * run-fsim-tests.sh
    * run-fsim-rtlsim-tests.sh
    * run-fsim-swtest-tests.sh

Each test will run all of its subtests by default, but you may specify which test(s) to run by passing
them in as command line parameters. To see the tests available, run one of these test scripts with just
the '-h' argument.

If you want to see all of the output of fsim as it is being tested by the scripts, set the environmental
variable VERBOSE to a non-empty string.

You may also set the environmental variable TG_INSTALL to point to the location of tg/tg/install.
Note: this program assumes that the apps repository is located in the same directory as the tg repository.

----------------------
Building for the Tests
----------------------

The tests require a completely built tg tree (along with fsim-swtest, fsim-rtlsim, and the rtl-asm, PIE,
and swtest tests) and requires that apps/libs, apps/legacy, and apps/examples all be built for ARCH=tg-xe.

--- To build the tg tools

cd tg/tg
make
cd build/build.fsim
make -f make-me.make install-fsim-rtlsim
make -f make-me.make install-fsim-swtest

--- To build apps/libs

cd apps/apps/libs/src
make -f Makefile.core ARCH=tg-xe

--- To build the tg examples

cd tg/tg/fsim/swtest
make DEBUG=1 cdemo_nonewlib
make DEBUG=1 cdemo
make DEBUG=1 cxxdemo
make DEBUG=1 throw
cd ../tests/rtl-asm
make
cd ../rtl-asm2
make
cd ../rtl-asm8
cd ../../../xe-llvm/test/PIE
make fptr_simple
make multi_seg

--- To build apps/legacy

cd apps/apps/legacy/tg-xe
make hello
make cxxhello
make iotest

--- To build apps/examples

cd apps/apps/examples/printf
make -f Makefile.tg install
cd ../fib
make -f Makefile.tg install

NOTE: The cholesky and smith-waterman examples currently have faulty Makefiles. They will not
install if you specify the install target like printf and fib. Instead you need to run them as
explained in their README files. This will build, install, and run them. After you have done
this once, the regression tests for them will be able to run:

cd apps/apps/examples/cholesky
make -f Makefile.tg run WORKLOAD_ARGS="--ds 100 --ts 10 --ps 1 --fi ${PWD}/../../../apps/cholesky/datasets/m_100.in"
cd ../smith-waterman
make -f Makefile.tg run 10 10 \
${PWD}/../../../apps/smithwaterman/datasets/string1-medium.txt \
${PWD}/../../../apps/smithwaterman/datasets/string2-medium.txt \
${PWD}/../../../apps/smithwaterman/datasets/score-medium.txt

------------------
Creating new tests
------------------

To create a new fsim test, modify the appropriate run-fsim*-tests.sh file. In this file you will need
to modify three things:

1) Add the test name to the list of tests in the TESTS variable.
2) In the first switch statement, export the environmental variables WORKLOAD_INSTALL and FSIM_ARGS.
   Also export any other environmental variables that are needed, and perform the rest of setup.
   You may also optionally add tests to the REGEX array.
3) In the final switch statement, unset any extra environmental variables you exported, and perform
   any necessary cleanup and extra tests. If any test fails. Print the error message and set SUCCESS to 0;

The REGEX array is a list of regular expressions to test for (using grep) in the output of fsim. Each
regex must be matched to the output for the test to pass. The regex's must be matched in order and output
line can only be matched to one regex.

If you need to inspect the output of fsim beyond what a regex can tell you, you may find it in the
directory $LOGS_DIR under the name fsim_output.
