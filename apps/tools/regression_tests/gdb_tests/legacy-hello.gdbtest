# Ignore this debug message
ignore-all: gdbxstg_wait: no pending events

# This is always an error
error: WARNING: Fsim has exited

# Report errors such as:
# ERROR: Fsim sock msg read error, cleaning up
# ERROR: fsim_xe_stop: client/agent (0,8) - error dbg_error_no_such_agent (0x3), state stopped
error: ERROR:

#=================================================================
test: break, continue and finish
#=================================================================
target: -c {APPS_ROOT}/legacy/tg-xe/ccfg.cfg,{APPS_ROOT}/tools/regression_tests/gdb_tests/single-xe.cfg -f {TG_INSTALL}/bin/fsim-swtest -w {APPS_ROOT}/legacy/tg-xe
file: {APPS_ROOT}/legacy/tg-xe/hello.swtest

in: break sub2
out: Breakpoint 1 at 0x[0-9a-f]*: file hello\.c, line 13\.

in: break 30
out: Breakpoint 2 at 0x[0-9a-f]*: file hello\.c, line 30\.

in: run
out: Starting program:
out: \[New thread
out:
out: Breakpoint 2, main \(.*\) at hello\.c:30
out: 30\s+printf\("Hello World!\\n"\);

in: continue
out: Continuing\.
out:
out: Breakpoint 1, sub2 \(value=5\) at hello.c:13
out: 13\s+return 2\*value;

in: continue
out: Continuing\.
out?: \[thread .* terminated
out: \[Inferior .* \(process .*\) exited normally

in: delete 1
ignore-output
in: delete 2
ignore-output

in: rbreak ^\(ocrGetTimeofDay\|tgr_gettimeofday\)$
ignore-output

in: break sub2
ignore-output

in: run
ignore-output

in: finish
out: Run till exit from #0\s+0x[0-9a-f]+ in (ocrGetTimeofDay|tgr_gettimeofday) \(\)
out: in _gettimeofday_r

in: finish
out: Run till exit from #0\s+0x[0-9a-f]+ in _gettimeofday_r \(\)
out: in time

in: finish
out: Run till exit from #0\s+0x[0-9a-f]+ in time \(\)
out: main.+at hello\.c:27
out: 27\s+time_t t = time\(NULL\);

in: continue
ignore-output

in: finish
out: Run till exit from #0\s+sub2
out: sub1 \(value=5\) at hello.c:19
out: 19
out: Value returned is \$1 = 10

in: finish
out: Run till exit from #0\s+0x[0-9a-f]+ in sub1
out: main .* at hello.c:37
out: 37
out: Value returned is \$2 = 15


#=================================================================
test: step, next and stepi
#=================================================================
target: -c {APPS_ROOT}/legacy/tg-xe/ccfg.cfg,{APPS_ROOT}/tools/regression_tests/gdb_tests/single-xe.cfg  -f {TG_INSTALL}/bin/fsim-swtest -w {APPS_ROOT}/legacy/tg-xe
file: {APPS_ROOT}/legacy/tg-xe/hello.swtest

in: break main
ignore-output

in: run
ignore-output

in: next
out: 27\s+time_t t = time\(NULL\);

in: next 6
out: 37\s+int ret = sub1\(5\);

in: step
out: sub1 \(value=5\) at hello\.c:19
out: 19\s+return value \+ sub2\(value\);

in: next
out: main \(argc=1, argv=0x[0-9a-f]+\) at hello\.c:38
out: 38\s+printf\("ret = %d\\n", ret\);

in: stepi
out: 0x[0-9a-f]+\s+38\s+printf\("ret = %d\\n", ret\);


#=================================================================
test: backtrace
#=================================================================
target: -c {APPS_ROOT}/legacy/tg-xe/ccfg.cfg,{APPS_ROOT}/tools/regression_tests/gdb_tests/single-xe.cfg -f {TG_INSTALL}/bin/fsim-swtest -w {APPS_ROOT}/legacy/tg-xe
file: {APPS_ROOT}/legacy/tg-xe/hello.swtest

in: break sub2
ignore-output

in: run
ignore-output

in: backtrace
out: #0  sub2
out: #1  0x[0-9a-f]* in sub1
out: #2  0x[0-9a-f]* in main


#=================================================================
test: disassemble
#=================================================================
target: -c {APPS_ROOT}/legacy/tg-xe/ccfg.cfg,{APPS_ROOT}/tools/regression_tests/gdb_tests/single-xe.cfg -f {TG_INSTALL}/bin/fsim-swtest -w {APPS_ROOT}/legacy/tg-xe
file: {APPS_ROOT}/legacy/tg-xe/hello.swtest

in: break main
ignore-output

in: run
ignore-output

in: disassemble
out: Dump of assembler code for function main:
out: 0x[0-9a-f]+ <\+0>:
out: 0x[0-9a-f]+ <\+8>:
out: 0x[0-9a-f]+ <\+16>:
out: 0x[0-9a-f]+ <\+24>:
ignore-output


#=================================================================
test: list, info thread & info reg
#=================================================================
target: -c {APPS_ROOT}/legacy/tg-xe/ccfg.cfg,{APPS_ROOT}/tools/regression_tests/gdb_tests/single-xe.cfg -f {TG_INSTALL}/bin/fsim-swtest -w {APPS_ROOT}/legacy/tg-xe
file: {APPS_ROOT}/legacy/tg-xe/hello.swtest

in: list 22,25
out: 22\s+int
out: 23\s+main\( int argc, char \*\*argv \)
out: 24\s+{
out: 25\s+void \* addr;

in: info thread
out: No threads\.

in: break main
ignore-output
in: run
ignore-output

in: info thread
out: Id\s+Target Id\s+Frame
out: \* 1\s+thread 1\s+main.*at hello\.c:26

in: info reg
out: r0\s*r1\s*r2\s*r3
out: [0-9a-f]+\s*[0-9a-f]+\s*[0-9a-f]+\s*[0-9a-f]+
out: r4\s*r5\s*r6\s*r7
out: [0-9a-f]+\s*[0-9a-f]+\s*[0-9a-f]+\s*[0-9a-f]+
ignore-output

in: continue
ignore-output

in: info thread
out: No threads\.


#=================================================================
test: print, x, and set
#=================================================================
target: -c {APPS_ROOT}/legacy/tg-xe/ccfg.cfg,{APPS_ROOT}/tools/regression_tests/gdb_tests/single-xe.cfg -f {TG_INSTALL}/bin/fsim-swtest -w {APPS_ROOT}/legacy/tg-xe
file: {APPS_ROOT}/legacy/tg-xe/hello.swtest

in: break 28
ignore-output
in: run
ignore-output

in: print len
out: \$1 = 32768

in: print/x len
out: \$2 = 0x8000

in: print/a $pc
out: \$3 = 0x[0-9a-f]+ <main\+\d+>

# Same as printing it
in: x &len
out: 0x[0-9a-f]+:\s+0x8000

# Ugly, but same as printing it
in: x/1dw &len
out: 0x[0-9a-f]+:\s+32768

# The below test doesn't make practical sence.
# It is just to test the functionality
in: x/2dh &len
out: 0x[0-9a-f]+:\s+-32768\s+0

in: x/1iw $pc
out: => 0x[0-9a-f]+ <main\+\d*>:

in: set var len=314159
#No output

in: print len
out: \$4 = 314159
